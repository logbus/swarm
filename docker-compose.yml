version: "3"

services:
  lb:
    image: al2108/lb-swarm:1.0
    build:
      context: ./lb
      dockerfile: ../lb.Dockerfile
    depends_on:
      - frontend
    networks:
      - frontend
    ports:
      - "80:80"

  frontend:
    image: al2108/frontend-swarm:1.1
    build:
      context: ./frontend
      dockerfile: ../frontend.Dockerfile
    deploy:
      replicas: 3
      placement:
        constraints:
          - node.role==worker
    depends_on:
      - backend
      - database
      - visualizer
    networks:
      - backend
      - frontend


  backend:
    image: al2108/backend-swarm:1.0
    build:
      context: ./backend
      dockerfile: ../backend.Dockerfile
    deploy:
      replicas: 3
      placement:
        constraints:
          - node.role==worker
    depends_on:
      - database
      - visualizer
    networks:
      - database
      - backend

  database:
    image: postgres:12.1
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role==worker
          - node.labels.db==postgres
      restart_policy:
        condition: on-failure
    restart: on-failure
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - database
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: backend
    ports:
      - "5432:5432"

  visualizer:
    image: dockersamples/visualizer:latest
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role==manager
      restart_policy:
        condition: on-failure
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "5000:8080"

networks:
  database:
  backend:
  frontend:

volumes:
  db-data: